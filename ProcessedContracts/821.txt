SafeMath
tryAdd
uint256
uint256
returns
uint256
unchecked
uint256
false
true
trySub
uint256
uint256
returns
uint256
unchecked
false
true
tryMul
uint256
uint256
returns
uint256
unchecked
true
uint256
false
true
tryDiv
uint256
uint256
returns
uint256
unchecked
false
true
tryMod
uint256
uint256
returns
uint256
unchecked
false
true
add
uint256
uint256
returns
uint256
sub
uint256
uint256
returns
uint256
mul
uint256
uint256
returns
uint256
div
uint256
uint256
returns
uint256
mod
uint256
uint256
returns
uint256
sub
uint256
uint256
errorMessage
returns
uint256
unchecked
errorMessage
div
uint256
uint256
errorMessage
returns
uint256
unchecked
errorMessage
mod
uint256
uint256
errorMessage
returns
uint256
unchecked
errorMessage
IERC20
totalSupply
returns
uint256
balanceOf
account
returns
uint256
transfer
recipient
uint256
amount
returns
allowance
owner
spender
returns
uint256
approve
spender
uint256
amount
returns
transferFrom
sender
recipient
uint256
amount
returns
Transfer
indexed
from
indexed
to
uint256
value
Approval
indexed
owner
indexed
spender
uint256
value
abstract
Context
msgSender
returns
msg
sender
msgData
returns
msg
data
abstract
Ownable
is
Context
owner
OwnershipTransferred
indexed
previousOwner
indexed
newOwner
transferOwnership
msgSender
owner
returns
owner
modifier
onlyOwner
owner
msgSender
Ownable
caller
is
not
the
owner
renounceOwnership
onlyOwner
transferOwnership
transferOwnership
newOwner
onlyOwner
newOwner
Ownable
owner
is
the
zero
transferOwnership
newOwner
transferOwnership
newOwner
oldOwner
owner
owner
newOwner
OwnershipTransferred
oldOwner
newOwner
OwnerWithdrawable
is
Ownable
SafeMath
uint256
SafeERC20
IERC20
receive
payable
fallback
payable
withdraw
token
uint256
amt
onlyOwner
IERC20
token
safeTransfer
msg
sender
amt
withdrawAll
token
onlyOwner
uint256
amt
IERC20
token
balanceOf
withdraw
token
amt
withdrawCurrency
uint256
amt
onlyOwner
payable
msg
sender
transfer
amt
Address
isContract
account
returns
uint256
size
assembly
size
extcodesize
account
size
sendValue
payable
recipient
uint256
amount
balance
amount
Address
insufficient
balance
success
recipient
call
value
amount
success
Address
unable
to
send
value
recipient
may
have
reverted
functionCall
target
data
returns
functionCall
target
data
Address
low
level
call
failed
functionCall
target
data
errorMessage
returns
functionCallWithValue
target
data
errorMessage
functionCallWithValue
target
data
uint256
value
returns
functionCallWithValue
target
data
value
Address
low
level
call
with
value
failed
functionCallWithValue
target
data
uint256
value
errorMessage
returns
balance
value
Address
insufficient
balance
call
isContract
target
Address
call
to
non
success
returndata
target
call
value
value
data
verifyCallResult
success
returndata
errorMessage
functionStaticCall
target
data
returns
functionStaticCall
target
data
Address
low
level
static
call
failed
functionStaticCall
target
data
errorMessage
returns
isContract
target
Address
static
call
to
non
success
returndata
target
staticcall
data
verifyCallResult
success
returndata
errorMessage
functionDelegateCall
target
data
returns
functionDelegateCall
target
data
Address
low
level
delegate
call
failed
functionDelegateCall
target
data
errorMessage
returns
isContract
target
Address
delegate
call
to
non
success
returndata
target
delegatecall
data
verifyCallResult
success
returndata
errorMessage
verifyCallResult
success
returndata
errorMessage
returns
success
returndata
returndata
length
assembly
let
returndata
size
mload
returndata
add
returndata
returndata
size
errorMessage
SafeERC20
Address
safeTransfer
IERC20
token
to
uint256
value
callOptionalReturn
token
abi
encodeWithSelector
token
transfer
selector
to
value
safeTransferFrom
IERC20
token
from
to
uint256
value
callOptionalReturn
token
abi
encodeWithSelector
token
transferFrom
selector
from
to
value
safeApprove
IERC20
token
spender
uint256
value
value
token
allowance
spender
SafeERC20
approve
from
non
zero
to
non
zero
allowance
callOptionalReturn
token
abi
encodeWithSelector
token
approve
selector
spender
value
safeIncreaseAllowance
IERC20
token
spender
uint256
value
uint256
newAllowance
token
allowance
spender
value
callOptionalReturn
token
abi
encodeWithSelector
token
approve
selector
spender
newAllowance
safeDecreaseAllowance
IERC20
token
spender
uint256
value
unchecked
uint256
oldAllowance
token
allowance
spender
oldAllowance
value
SafeERC20
decreased
allowance
below
zero
uint256
newAllowance
oldAllowance
value
callOptionalReturn
token
abi
encodeWithSelector
token
approve
selector
spender
newAllowance
callOptionalReturn
IERC20
token
data
returndata
token
functionCall
data
SafeERC20
low
level
call
failed
returndata
length
abi
decode
returndata
SafeERC20
ERC20
operation
did
not
succeed
IERC20Metadata
is
IERC20
name
returns
symbol
returns
decimals
returns
uint8
MemePresale
is
OwnerWithdrawable
SafeMath
uint256
SafeERC20
IERC20
SafeERC20
IERC20Metadata
uint256
rate
saleToken
saleTokenDec
uint256
totalTokensforSale
payableTokens
uint256
tokenPrices
saleStatus
buyers
BuyerTokenDetails
buyersAmount
uint256
totalTokensSold
BuyerTokenDetails
amount
exists
isClaimed
saleStatus
false
modifier
saleEnabled
saleStatus
true
ArbPresale
is
not
enabled
modifier
saleStoped
saleStatus
false
ArbPresale
is
not
stopped
setSaleToken
saleToken
uint256
totalTokensforSale
uint256
rate
saleStatus
onlyOwner
rate
rate
rate
saleToken
saleToken
saleStatus
saleStatus
saleTokenDec
IERC20Metadata
saleToken
decimals
totalTokensforSale
totalTokensforSale
IERC20
saleToken
safeTransferFrom
msg
sender
totalTokensforSale
stopSale
onlyOwner
saleStatus
false
resumeSale
onlyOwner
saleStatus
true
addPayableTokens
tokens
uint256
prices
onlyOwner
tokens
length
prices
length
Presale
tokens
prices
arrays
length
mismatch
uint256
tokens
length
prices
payableTokens
tokens
true
tokenPrices
tokens
prices
payableTokenStatus
token
status
onlyOwner
payableTokens
token
status
payableTokens
token
status
updateTokenRate
tokens
uint256
prices
uint256
rate
onlyOwner
tokens
length
prices
length
Presale
tokens
prices
arrays
length
mismatch
rate
rate
rate
uint256
tokens
length
payableTokens
tokens
true
prices
tokenPrices
tokens
prices
getTokenAmount
token
uint256
amount
returns
uint256
uint256
amtOut
token
payableTokens
token
true
Presale
Token
not
allowed
uint256
price
tokenPrices
token
amtOut
amount
mul
saleTokenDec
div
price
amtOut
amount
mul
saleTokenDec
div
rate
amtOut
buyToken
token
uint256
amount
payable
saleEnabled
uint256
saleTokenAmt
token
getTokenAmount
token
amount
getTokenAmount
msg
value
totalTokensSold
saleTokenAmt
totalTokensforSale
Presale
Not
enough
tokens
to
be
sale
token
amount
IERC20
token
safeTransferFrom
msg
sender
amount
totalTokensSold
saleTokenAmt
buyersAmount
msg
sender
exists
buyers
push
msg
sender
buyersAmount
msg
sender
exists
true
IERC20
saleToken
safeTransfer
msg
sender
saleTokenAmt
buyersAmount
msg
sender
amount
saleTokenAmt
unlockToken
payable
saleStoped
buyersAmount
msg
sender
amount
Presale
No
tokens
to
claim
uint256
tokensforWithdraw
buyersAmount
msg
sender
amount
buyersAmount
msg
sender
amount
IERC20
saleToken
safeTransfer
msg
sender
tokensforWithdraw
unlockAllTokens
onlyOwner
saleStoped
uint256
buyers
length
buyersAmount
buyers
amount
IERC20
saleToken
safeTransfer
buyers
buyersAmount
buyers
amount
buyersAmount
buyers
amount
withdrawAllSaleTokens
onlyOwner
saleStoped
uint256
amt
IERC20
saleToken
balanceOf
IERC20
saleToken
transfer
msg
sender
amt
totalTokensforSale
