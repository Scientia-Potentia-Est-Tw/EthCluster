abstract
Context
msgSender
returns
msg
sender
msgData
returns
msg
data
abstract
Ownable
is
Context
owner
OwnershipTransferred
indexed
previousOwner
indexed
newOwner
transferOwnership
msgSender
modifier
onlyOwner
checkOwner
owner
returns
owner
checkOwner
owner
msgSender
Ownable
caller
is
not
the
owner
renounceOwnership
onlyOwner
transferOwnership
transferOwnership
newOwner
onlyOwner
newOwner
Ownable
owner
is
the
zero
transferOwnership
newOwner
transferOwnership
newOwner
oldOwner
owner
owner
newOwner
OwnershipTransferred
oldOwner
newOwner
IERC20
Transfer
indexed
from
indexed
to
uint256
value
Approval
indexed
owner
indexed
spender
uint256
value
totalSupply
returns
uint96
balanceOf
account
returns
uint96
transfer
to
amount
returns
allowance
owner
spender
returns
uint96
approve
spender
amount
returns
transferFrom
from
to
amount
returns
IERC20Metadata
is
IERC20
name
returns
symbol
returns
decimals
returns
uint8
ERC20
is
Context
IERC20
IERC20Metadata
uint96
balances
uint96
allowances
uint96
totalSupply
name
symbol
delegates
Checkpoint
uint32
fromBlock
uint96
votes
uint32
Checkpoint
checkpoints
uint32
numCheckpoints
bytes32
DOMAIN
TYPEHASH
keccak256
EIP712Domain
name
uint256
chainId
verifyingContract
bytes32
DELEGATION
TYPEHASH
keccak256
Delegation
delegatee
uint256
nonce
uint256
expiry
nonces
DelegateChanged
indexed
delegator
indexed
fromDelegate
indexed
toDelegate
DelegateVotesChanged
indexed
delegate
previousBalance
newBalance
name
symbol
name
name
symbol
symbol
name
returns
name
symbol
returns
symbol
decimals
returns
uint8
totalSupply
returns
uint96
totalSupply
balanceOf
account
returns
uint96
balances
account
transfer
to
rawAmount
returns
uint96
amount
safe96
rawAmount
ERC20
transfer
amount
exceeds
bits
owner
msgSender
transfer
owner
to
amount
true
allowance
owner
spender
returns
uint96
allowances
owner
spender
approve
spender
amount
returns
owner
msgSender
approve
owner
spender
amount
true
transferFrom
from
to
rawAmount
returns
spender
msgSender
uint96
spenderAllowance
allowances
from
spender
uint96
amount
safe96
rawAmount
ERC20
transferFrom
amount
exceeds
bits
spender
from
spenderAllowance
type
uint96
max
uint96
newAllowance
sub96
spenderAllowance
amount
ERC20
transferFrom
transfer
amount
exceeds
spender
allowance
allowances
from
spender
newAllowance
Approval
from
spender
newAllowance
transfer
from
to
amount
true
increaseAllowance
spender
addedValue
returns
owner
msgSender
uint96
amount
safe96
addedValue
ERC20
increaseAllowance
amount
exceeds
bits
approve
owner
spender
allowance
owner
spender
amount
true
decreaseAllowance
spender
subtractedValue
returns
owner
msgSender
uint96
currentAllowance
allowance
owner
spender
uint96
amount
safe96
subtractedValue
ERC20
decreaseAllowance
amount
exceeds
bits
currentAllowance
amount
ERC20
decreased
allowance
below
zero
unchecked
approve
owner
spender
currentAllowance
amount
true
transfer
from
to
uint96
amount
from
ERC20
transfer
from
the
zero
to
ERC20
transfer
to
the
zero
to
ERC20
transfer
cannot
transfer
to
token
beforeTokenTransfer
from
to
amount
balances
from
sub96
balances
from
amount
ERC20
transfer
transfer
amount
exceeds
balance
balances
to
add96
balances
to
amount
ERC20
transfer
transfer
amount
overflows
Transfer
from
to
amount
moveDelegates
delegates
from
delegates
to
amount
afterTokenTransfer
from
to
amount
mint
account
rawAmount
account
ERC20
mint
to
the
zero
uint96
amount
safe96
rawAmount
ERC20
mint
amount
exceeds
bits
beforeTokenTransfer
account
amount
unchecked
totalSupply
add96
totalSupply
amount
ERC20
mint
totalSupply
exceeds
bits
balances
account
add96
balances
account
amount
ERC20
transfer
transfer
amount
overflows
Transfer
account
amount
moveDelegates
delegates
account
amount
afterTokenTransfer
account
amount
burn
account
rawAmount
account
ERC20
burn
from
the
zero
uint96
amount
safe96
rawAmount
ERC20
burn
amount
exceeds
bits
beforeTokenTransfer
account
amount
uint96
accountBalance
balances
account
accountBalance
amount
ERC20
burn
amount
exceeds
balance
unchecked
balances
account
sub96
accountBalance
amount
ERC20
burn
amount
exceeds
bits
totalSupply
sub96
totalSupply
amount
ERC20
burn
amount
exceeds
bits
Transfer
account
amount
moveDelegates
delegates
account
amount
afterTokenTransfer
account
amount
approve
owner
spender
rawAmount
owner
ERC20
approve
from
the
zero
spender
ERC20
approve
to
the
zero
uint96
amount
rawAmount
type
max
amount
type
uint96
max
amount
safe96
rawAmount
ERC20
approve
amount
exceeds
bits
allowances
owner
spender
amount
Approval
owner
spender
amount
spendAllowance
owner
spender
rawAmount
uint96
amount
safe96
rawAmount
ERC20
spendAllowance
amount
exceeds
bits
uint96
currentAllowance
allowance
owner
spender
currentAllowance
type
uint96
max
currentAllowance
amount
ERC20
insufficient
allowance
unchecked
approve
owner
spender
currentAllowance
amount
beforeTokenTransfer
from
to
uint256
amount
afterTokenTransfer
from
to
uint256
amount
safe32
errorMessage
returns
uint32
errorMessage
uint32
safe96
errorMessage
returns
uint96
errorMessage
uint96
add96
uint96
uint96
errorMessage
returns
uint96
uint96
errorMessage
sub96
uint96
uint96
errorMessage
returns
uint96
errorMessage
delegate
delegatee
delegate
msg
sender
delegatee
delegateBySig
delegatee
nonce
expiry
uint8
bytes32
bytes32
bytes32
domainSeparator
keccak256
abi
encode
DOMAIN
TYPEHASH
keccak256
name
getChainId
bytes32
structHash
keccak256
abi
encode
DELEGATION
TYPEHASH
delegatee
nonce
expiry
bytes32
digest
keccak256
abi
encodePacked
x19
x01
domainSeparator
structHash
signatory
ecrecover
digest
signatory
INA
delegateBySig
invalid
signature
nonce
nonces
signatory
INA
delegateBySig
invalid
nonce
block
timestamp
expiry
INA
delegateBySig
signature
expired
delegate
signatory
delegatee
getCurrentVotes
account
returns
uint96
uint32
nCheckpoints
numCheckpoints
account
nCheckpoints
checkpoints
account
nCheckpoints
votes
getPriorVotes
account
blockNumber
returns
uint96
blockNumber
block
number
INA
getPriorVotes
not
yet
determined
uint32
nCheckpoints
numCheckpoints
account
nCheckpoints
checkpoints
account
nCheckpoints
fromBlock
blockNumber
checkpoints
account
nCheckpoints
votes
checkpoints
account
fromBlock
blockNumber
uint32
lower
uint32
upper
nCheckpoints
upper
lower
uint32
center
upper
upper
lower
Checkpoint
cp
checkpoints
account
center
cp
fromBlock
blockNumber
cp
votes
cp
fromBlock
blockNumber
lower
center
upper
center
checkpoints
account
lower
votes
delegate
delegator
delegatee
currentDelegate
delegates
delegator
uint96
delegatorBalance
balances
delegator
delegates
delegator
delegatee
DelegateChanged
delegator
currentDelegate
delegatee
moveDelegates
currentDelegate
delegatee
delegatorBalance
moveDelegates
srcRep
dstRep
uint96
amount
srcRep
dstRep
amount
srcRep
uint32
srcRepNum
numCheckpoints
srcRep
uint96
srcRepOld
srcRepNum
checkpoints
srcRep
srcRepNum
votes
uint96
srcRepNew
sub96
srcRepOld
amount
INA
moveVotes
vote
amount
underflows
writeCheckpoint
srcRep
srcRepNum
srcRepOld
srcRepNew
dstRep
uint32
dstRepNum
numCheckpoints
dstRep
uint96
dstRepOld
dstRepNum
checkpoints
dstRep
dstRepNum
votes
uint96
dstRepNew
add96
dstRepOld
amount
INA
moveVotes
vote
amount
overflows
writeCheckpoint
dstRep
dstRepNum
dstRepOld
dstRepNew
writeCheckpoint
delegatee
uint32
nCheckpoints
uint96
oldVotes
uint96
newVotes
uint32
blockNumber
safe32
block
number
INA
writeCheckpoint
block
number
exceeds
bits
nCheckpoints
checkpoints
delegatee
nCheckpoints
fromBlock
blockNumber
checkpoints
delegatee
nCheckpoints
votes
newVotes
checkpoints
delegatee
nCheckpoints
Checkpoint
blockNumber
newVotes
numCheckpoints
delegatee
nCheckpoints
DelegateVotesChanged
delegatee
oldVotes
newVotes
getChainId
returns
uint256
chainId
assembly
chainId
chainid
chainId
IERC165
supportsInterface
bytes4
interfaceId
returns
abstract
ERC165
is
IERC165
supportsInterface
bytes4
interfaceId
returns
interfaceId
type
IERC165
interfaceId
ILayerZeroUserApplicationConfig
setConfig
uint16
version
uint16
chainId
configType
config
setSendVersion
uint16
version
setReceiveVersion
uint16
version
forceResumeReceive
uint16
srcChainId
srcAddress
ILayerZeroEndpoint
is
ILayerZeroUserApplicationConfig
send
uint16
dstChainId
destination
payload
payable
refundAddress
zroPaymentAddress
adapterParams
payable
receivePayload
uint16
srcChainId
srcAddress
dstAddress
uint64
nonce
gasLimit
payload
getInboundNonce
uint16
srcChainId
srcAddress
returns
uint64
getOutboundNonce
uint16
dstChainId
srcAddress
returns
uint64
estimateFees
uint16
dstChainId
userApplication
payload
payInZRO
adapterParam
returns
nativeFee
zroFee
getChainId
returns
uint16
retryPayload
uint16
srcChainId
srcAddress
payload
hasStoredPayload
uint16
srcChainId
srcAddress
returns
getSendLibraryAddress
userApplication
returns
getReceiveLibraryAddress
userApplication
returns
isSendingPayload
returns
isReceivingPayload
returns
getConfig
uint16
version
uint16
chainId
userApplication
configType
returns
getSendVersion
userApplication
returns
uint16
getReceiveVersion
userApplication
returns
uint16
BytesLib
concat
preBytes
postBytes
returns
tempBytes
assembly
tempBytes
mload
0x40
let
length
mload
preBytes
mstore
tempBytes
length
let
mc
add
tempBytes
0x20
let
end
add
mc
length
let
cc
add
preBytes
0x20
lt
mc
end
mc
add
mc
0x20
cc
add
cc
0x20
mstore
mc
mload
cc
length
mload
postBytes
mstore
tempBytes
add
length
mload
tempBytes
mc
end
end
add
mc
length
let
cc
add
postBytes
0x20
lt
mc
end
mc
add
mc
0x20
cc
add
cc
0x20
mstore
mc
mload
cc
mstore
0x40
and
add
add
end
iszero
add
length
mload
preBytes
not
tempBytes
concatStorage
preBytes
postBytes
assembly
let
fslot
sload
preBytes
slot
let
slength
div
and
fslot
sub
mul
0x100
iszero
and
fslot
let
mlength
mload
postBytes
let
newlength
add
slength
mlength
switch
add
lt
slength
lt
newlength
case
sstore
preBytes
slot
add
fslot
add
mul
div
mload
add
postBytes
0x20
exp
0x100
sub
mlength
exp
0x100
sub
newlength
mul
mlength
case
mstore
0x0
preBytes
slot
let
sc
add
keccak256
0x0
0x20
div
slength
sstore
preBytes
slot
add
mul
newlength
let
submod
sub
slength
let
mc
add
postBytes
submod
let
end
add
postBytes
mlength
let
mask
sub
exp
0x100
submod
sstore
sc
add
and
fslot
0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
and
mload
mc
mask
mc
add
mc
0x20
sc
add
sc
lt
mc
end
sc
add
sc
mc
add
mc
0x20
sstore
sc
mload
mc
mask
exp
0x100
sub
mc
end
sstore
sc
mul
div
mload
mc
mask
mask
default
mstore
0x0
preBytes
slot
let
sc
add
keccak256
0x0
0x20
div
slength
sstore
preBytes
slot
add
mul
newlength
let
slengthmod
mod
slength
let
mlengthmod
mod
mlength
let
submod
sub
slengthmod
let
mc
add
postBytes
submod
let
end
add
postBytes
mlength
let
mask
sub
exp
0x100
submod
sstore
sc
add
sload
sc
and
mload
mc
mask
sc
add
sc
mc
add
mc
0x20
lt
mc
end
sc
add
sc
mc
add
mc
0x20
sstore
sc
mload
mc
mask
exp
0x100
sub
mc
end
sstore
sc
mul
div
mload
mc
mask
mask
slice
start
length
returns
length
length
slice
overflow
length
start
length
slice
outOfBounds
tempBytes
assembly
switch
iszero
length
case
tempBytes
mload
0x40
let
lengthmod
and
length
let
mc
add
add
tempBytes
lengthmod
mul
0x20
iszero
lengthmod
let
end
add
mc
length
let
cc
add
add
add
lengthmod
mul
0x20
iszero
lengthmod
start
lt
mc
end
mc
add
mc
0x20
cc
add
cc
0x20
mstore
mc
mload
cc
mstore
tempBytes
length
mstore
0x40
and
add
mc
not
default
tempBytes
mload
0x40
mstore
tempBytes
mstore
0x40
add
tempBytes
0x20
tempBytes
toAddress
start
returns
length
start
toAddress
outOfBounds
tempAddress
assembly
tempAddress
div
mload
add
add
0x20
start
0x1000000000000000000000000
tempAddress
toUint8
start
returns
uint8
length
start
toUint8
outOfBounds
uint8
tempUint
assembly
tempUint
mload
add
add
0x1
start
tempUint
toUint16
start
returns
uint16
length
start
toUint16
outOfBounds
uint16
tempUint
assembly
tempUint
mload
add
add
0x2
start
tempUint
toUint32
start
returns
uint32
length
start
toUint32
outOfBounds
uint32
tempUint
assembly
tempUint
mload
add
add
0x4
start
tempUint
toUint64
start
returns
uint64
length
start
toUint64
outOfBounds
uint64
tempUint
assembly
tempUint
mload
add
add
0x8
start
tempUint
toUint96
start
returns
uint96
length
start
toUint96
outOfBounds
uint96
tempUint
assembly
tempUint
mload
add
add
0xc
start
tempUint
toUint128
start
returns
uint128
length
start
toUint128
outOfBounds
uint128
tempUint
assembly
tempUint
mload
add
add
0x10
start
tempUint
toUint256
start
returns
length
start
toUint256
outOfBounds
tempUint
assembly
tempUint
mload
add
add
0x20
start
tempUint
toBytes32
start
returns
bytes32
length
start
toBytes32
outOfBounds
bytes32
tempBytes32
assembly
tempBytes32
mload
add
add
0x20
start
tempBytes32
equal
preBytes
postBytes
returns
success
true
assembly
let
length
mload
preBytes
switch
eq
length
mload
postBytes
case
let
cb
let
mc
add
preBytes
0x20
let
end
add
mc
length
let
cc
add
postBytes
0x20
eq
add
lt
mc
end
cb
mc
add
mc
0x20
cc
add
cc
0x20
iszero
eq
mload
mc
mload
cc
success
cb
default
success
success
equalStorage
preBytes
postBytes
returns
success
true
assembly
let
fslot
sload
preBytes
slot
let
slength
div
and
fslot
sub
mul
0x100
iszero
and
fslot
let
mlength
mload
postBytes
switch
eq
slength
mlength
case
iszero
iszero
slength
switch
lt
slength
case
fslot
mul
div
fslot
0x100
0x100
iszero
eq
fslot
mload
add
postBytes
0x20
success
default
let
cb
mstore
0x0
preBytes
slot
let
sc
keccak256
0x0
0x20
let
mc
add
postBytes
0x20
let
end
add
mc
mlength
eq
add
lt
mc
end
cb
sc
add
sc
mc
add
mc
0x20
iszero
eq
sload
sc
mload
mc
success
cb
default
success
success
ILayerZeroReceiver
lzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
abstract
LzApp
is
Ownable
ILayerZeroReceiver
ILayerZeroUserApplicationConfig
BytesLib
DEFAULT
PAYLOAD
SIZE
LIMIT
ILayerZeroEndpoint
lzEndpoint
uint16
trustedRemoteLookup
uint16
uint16
minDstGasLookup
uint16
payloadSizeLimitLookup
precrime
SetPrecrime
precrime
SetTrustedRemote
uint16
remoteChainId
path
SetTrustedRemoteAddress
uint16
remoteChainId
remoteAddress
SetMinDstGas
uint16
dstChainId
uint16
type
minDstGas
endpoint
lzEndpoint
ILayerZeroEndpoint
endpoint
lzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
msgSender
lzEndpoint
LzApp
invalid
endpoint
caller
trustedRemote
trustedRemoteLookup
srcChainId
srcAddress
length
trustedRemote
length
trustedRemote
length
keccak256
srcAddress
keccak256
trustedRemote
LzApp
invalid
source
sending
blockingLzReceive
srcChainId
srcAddress
nonce
payload
blockingLzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
lzSend
uint16
dstChainId
payload
payable
refundAddress
zroPaymentAddress
adapterParams
nativeFee
trustedRemote
trustedRemoteLookup
dstChainId
trustedRemote
length
LzApp
destination
chain
is
not
trusted
source
checkPayloadSize
dstChainId
payload
length
lzEndpoint
send
value
nativeFee
dstChainId
trustedRemote
payload
refundAddress
zroPaymentAddress
adapterParams
checkGasLimit
uint16
dstChainId
uint16
type
adapterParams
extraGas
providedGasLimit
getGasLimit
adapterParams
minGasLimit
minDstGasLookup
dstChainId
type
minGasLimit
LzApp
minGasLimit
not
set
providedGasLimit
minGasLimit
extraGas
LzApp
gas
limit
is
too
low
getGasLimit
adapterParams
returns
gasLimit
adapterParams
length
LzApp
invalid
adapterParams
assembly
gasLimit
mload
add
adapterParams
checkPayloadSize
uint16
dstChainId
payloadSize
payloadSizeLimit
payloadSizeLimitLookup
dstChainId
payloadSizeLimit
payloadSizeLimit
DEFAULT
PAYLOAD
SIZE
LIMIT
payloadSize
payloadSizeLimit
LzApp
payload
size
is
too
large
getConfig
uint16
version
uint16
chainId
configType
returns
lzEndpoint
getConfig
version
chainId
configType
setConfig
uint16
version
uint16
chainId
configType
config
onlyOwner
lzEndpoint
setConfig
version
chainId
configType
config
setSendVersion
uint16
version
onlyOwner
lzEndpoint
setSendVersion
version
setReceiveVersion
uint16
version
onlyOwner
lzEndpoint
setReceiveVersion
version
forceResumeReceive
uint16
srcChainId
srcAddress
onlyOwner
lzEndpoint
forceResumeReceive
srcChainId
srcAddress
setTrustedRemote
uint16
remoteChainId
path
onlyOwner
trustedRemoteLookup
remoteChainId
path
SetTrustedRemote
remoteChainId
path
setTrustedRemoteAddress
uint16
remoteChainId
remoteAddress
onlyOwner
trustedRemoteLookup
remoteChainId
abi
encodePacked
remoteAddress
SetTrustedRemoteAddress
remoteChainId
remoteAddress
getTrustedRemoteAddress
uint16
remoteChainId
returns
path
trustedRemoteLookup
remoteChainId
path
length
LzApp
no
trusted
path
record
path
slice
path
length
setPrecrime
precrime
onlyOwner
precrime
precrime
SetPrecrime
precrime
setMinDstGas
uint16
dstChainId
uint16
packetType
minGas
onlyOwner
minDstGasLookup
dstChainId
packetType
minGas
SetMinDstGas
dstChainId
packetType
minGas
setPayloadSizeLimit
uint16
dstChainId
size
onlyOwner
payloadSizeLimitLookup
dstChainId
size
isTrustedRemote
uint16
srcChainId
srcAddress
returns
trustedSource
trustedRemoteLookup
srcChainId
keccak256
trustedSource
keccak256
srcAddress
ExcessivelySafeCall
LOW
MASK
0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
excessivelySafeCall
target
gas
uint16
maxCopy
returns
toCopy
success
returnData
maxCopy
assembly
success
call
gas
target
add
0x20
mload
toCopy
returndatasize
gt
toCopy
maxCopy
toCopy
maxCopy
mstore
returnData
toCopy
returndatacopy
add
returnData
0x20
toCopy
success
returnData
excessivelySafeStaticCall
target
gas
uint16
maxCopy
returns
toCopy
success
returnData
maxCopy
assembly
success
staticcall
gas
target
add
0x20
mload
toCopy
returndatasize
gt
toCopy
maxCopy
toCopy
maxCopy
mstore
returnData
toCopy
returndatacopy
add
returnData
0x20
toCopy
success
returnData
swapSelector
bytes4
newSelector
buf
buf
length
mask
LOW
MASK
assembly
let
word
mload
add
buf
0x20
word
and
word
mask
word
or
newSelector
word
mstore
add
buf
0x20
word
abstract
NonblockingLzApp
is
LzApp
ExcessivelySafeCall
endpoint
LzApp
endpoint
uint16
uint64
bytes32
failedMessages
MessageFailed
uint16
srcChainId
srcAddress
uint64
nonce
payload
reason
RetryMessageSuccess
uint16
srcChainId
srcAddress
uint64
nonce
bytes32
payloadHash
blockingLzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
success
reason
excessivelySafeCall
gasleft
abi
encodeWithSelector
nonblockingLzReceive
selector
srcChainId
srcAddress
nonce
payload
success
storeFailedMessage
srcChainId
srcAddress
nonce
payload
reason
storeFailedMessage
uint16
srcChainId
srcAddress
uint64
nonce
payload
reason
failedMessages
srcChainId
srcAddress
nonce
keccak256
payload
MessageFailed
srcChainId
srcAddress
nonce
payload
reason
nonblockingLzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
msgSender
NonblockingLzApp
caller
must
be
LzApp
nonblockingLzReceive
srcChainId
srcAddress
nonce
payload
nonblockingLzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
retryMessage
uint16
srcChainId
srcAddress
uint64
nonce
payload
payable
bytes32
payloadHash
failedMessages
srcChainId
srcAddress
nonce
payloadHash
bytes32
NonblockingLzApp
no
stored
message
keccak256
payload
payloadHash
NonblockingLzApp
invalid
payload
failedMessages
srcChainId
srcAddress
nonce
bytes32
nonblockingLzReceive
srcChainId
srcAddress
nonce
payload
RetryMessageSuccess
srcChainId
srcAddress
nonce
payloadHash
ICommonOFT
is
IERC165
LzCallParams
payable
refundAddress
zroPaymentAddress
adapterParams
estimateSendFee
uint16
dstChainId
bytes32
toAddress
amount
useZro
adapterParams
returns
nativeFee
zroFee
estimateSendAndCallFee
uint16
dstChainId
bytes32
toAddress
amount
payload
uint64
dstGasForCall
useZro
adapterParams
returns
nativeFee
zroFee
circulatingSupply
returns
token
returns
IOFTV2
is
ICommonOFT
sendFrom
from
uint16
dstChainId
bytes32
toAddress
amount
LzCallParams
callParams
payable
sendAndCall
from
uint16
dstChainId
bytes32
toAddress
amount
payload
uint64
dstGasForCall
LzCallParams
callParams
payable
IOFTReceiverV2
onOFTReceived
uint16
srcChainId
srcAddress
uint64
nonce
bytes32
from
amount
payload
abstract
OFTCoreV2
is
NonblockingLzApp
BytesLib
ExcessivelySafeCall
NO
EXTRA
GAS
uint8
PT
SEND
uint8
PT
SEND
AND
CALL
uint8
sharedDecimals
uint16
uint64
creditedPackets
SendToChain
uint16
indexed
dstChainId
indexed
from
bytes32
indexed
toAddress
amount
ReceiveFromChain
uint16
indexed
srcChainId
indexed
to
amount
CallOFTReceivedSuccess
uint16
indexed
srcChainId
srcAddress
uint64
nonce
bytes32
hash
NonContractAddress
uint8
sharedDecimals
lzEndpoint
NonblockingLzApp
lzEndpoint
sharedDecimals
sharedDecimals
callOnOFTReceived
uint16
srcChainId
srcAddress
uint64
nonce
bytes32
from
to
amount
payload
gasForCall
msgSender
OFTCore
caller
must
be
OFTCore
amount
transferFrom
to
amount
ReceiveFromChain
srcChainId
to
amount
IOFTReceiverV2
to
onOFTReceived
gas
gasForCall
srcChainId
srcAddress
nonce
from
amount
payload
estimateSendFee
uint16
dstChainId
bytes32
toAddress
amount
useZro
adapterParams
returns
nativeFee
zroFee
payload
encodeSendPayload
toAddress
ld2sd
amount
lzEndpoint
estimateFees
dstChainId
payload
useZro
adapterParams
estimateSendAndCallFee
uint16
dstChainId
bytes32
toAddress
amount
payload
uint64
dstGasForCall
useZro
adapterParams
returns
nativeFee
zroFee
payload
encodeSendAndCallPayload
msg
sender
toAddress
ld2sd
amount
payload
dstGasForCall
lzEndpoint
estimateFees
dstChainId
payload
useZro
adapterParams
nonblockingLzReceive
uint16
srcChainId
srcAddress
uint64
nonce
payload
uint8
packetType
payload
toUint8
packetType
PT
SEND
sendAck
srcChainId
srcAddress
nonce
payload
packetType
PT
SEND
AND
CALL
sendAndCallAck
srcChainId
srcAddress
nonce
payload
OFTCore
unknown
packet
type
send
from
uint16
dstChainId
bytes32
toAddress
amount
payable
refundAddress
zroPaymentAddress
adapterParams
returns
amount
checkGasLimit
dstChainId
PT
SEND
adapterParams
NO
EXTRA
GAS
amount
removeDust
amount
amount
debitFrom
from
dstChainId
toAddress
amount
amount
OFTCore
amount
too
small
lzPayload
encodeSendPayload
toAddress
ld2sd
amount
lzSend
dstChainId
lzPayload
refundAddress
zroPaymentAddress
adapterParams
msg
value
SendToChain
dstChainId
from
toAddress
amount
sendAck
uint16
srcChainId
uint64
payload
to
uint64
amountSD
decodeSendPayload
payload
to
to
0xdead
amount
sd2ld
amountSD
amount
creditTo
srcChainId
to
amount
ReceiveFromChain
srcChainId
to
amount
sendAndCall
from
uint16
dstChainId
bytes32
toAddress
amount
payload
uint64
dstGasForCall
payable
refundAddress
zroPaymentAddress
adapterParams
returns
amount
checkGasLimit
dstChainId
PT
SEND
AND
CALL
adapterParams
dstGasForCall
amount
removeDust
amount
amount
debitFrom
from
dstChainId
toAddress
amount
amount
OFTCore
amount
too
small
lzPayload
encodeSendAndCallPayload
msg
sender
toAddress
ld2sd
amount
payload
dstGasForCall
lzSend
dstChainId
lzPayload
refundAddress
zroPaymentAddress
adapterParams
msg
value
SendToChain
dstChainId
from
toAddress
amount
sendAndCallAck
uint16
srcChainId
srcAddress
uint64
nonce
payload
bytes32
from
to
uint64
amountSD
payloadForCall
uint64
gasForCall
decodeSendAndCallPayload
payload
credited
creditedPackets
srcChainId
srcAddress
nonce
amount
sd2ld
amountSD
credited
amount
creditTo
srcChainId
amount
creditedPackets
srcChainId
srcAddress
nonce
true
isContract
to
NonContractAddress
to
uint16
srcChainId
srcChainId
srcAddress
srcAddress
uint64
nonce
nonce
payload
payload
bytes32
from
from
to
to
amount
amount
payloadForCall
payloadForCall
gas
credited
gasleft
gasForCall
success
reason
excessivelySafeCall
gasleft
abi
encodeWithSelector
callOnOFTReceived
selector
srcChainId
srcAddress
nonce
from
to
amount
payloadForCall
gas
success
bytes32
hash
keccak256
payload
CallOFTReceivedSuccess
srcChainId
srcAddress
nonce
hash
storeFailedMessage
srcChainId
srcAddress
nonce
payload
reason
isContract
account
returns
account
code
length
ld2sd
amount
returns
uint64
amountSD
amount
ld2sdRate
amountSD
type
uint64
max
OFTCore
amountSD
overflow
uint64
amountSD
sd2ld
uint64
amountSD
returns
amountSD
ld2sdRate
removeDust
amount
returns
amountAfter
dust
dust
amount
ld2sdRate
amountAfter
amount
dust
encodeSendPayload
bytes32
toAddress
uint64
amountSD
returns
abi
encodePacked
PT
SEND
toAddress
amountSD
decodeSendPayload
payload
returns
to
uint64
amountSD
payload
toUint8
PT
SEND
payload
length
OFTCore
invalid
payload
to
payload
toAddress
amountSD
payload
toUint64
encodeSendAndCallPayload
from
bytes32
toAddress
uint64
amountSD
payload
uint64
dstGasForCall
returns
abi
encodePacked
PT
SEND
AND
CALL
toAddress
amountSD
addressToBytes32
from
dstGasForCall
payload
decodeSendAndCallPayload
payload
returns
bytes32
from
to
uint64
amountSD
payload
uint64
dstGasForCall
payload
toUint8
PT
SEND
AND
CALL
OFTCore
invalid
payload
to
payload
toAddress
amountSD
payload
toUint64
from
payload
toBytes32
dstGasForCall
payload
toUint64
payload
payload
slice
payload
length
addressToBytes32
returns
bytes32
bytes32
uint160
debitFrom
from
uint16
dstChainId
bytes32
toAddress
amount
returns
creditTo
uint16
srcChainId
toAddress
amount
returns
transferFrom
from
to
amount
returns
ld2sdRate
returns
abstract
BaseOFTV2
is
OFTCoreV2
ERC165
IOFTV2
uint8
sharedDecimals
lzEndpoint
OFTCoreV2
sharedDecimals
lzEndpoint
sendFrom
from
uint16
dstChainId
bytes32
toAddress
amount
LzCallParams
callParams
payable
send
from
dstChainId
toAddress
amount
callParams
refundAddress
callParams
zroPaymentAddress
callParams
adapterParams
sendAndCall
from
uint16
dstChainId
bytes32
toAddress
amount
payload
uint64
dstGasForCall
LzCallParams
callParams
payable
sendAndCall
from
dstChainId
toAddress
amount
payload
dstGasForCall
callParams
refundAddress
callParams
zroPaymentAddress
callParams
adapterParams
supportsInterface
bytes4
interfaceId
ERC165
IERC165
returns
interfaceId
type
IOFTV2
interfaceId
super
supportsInterface
interfaceId
estimateSendFee
uint16
dstChainId
bytes32
toAddress
amount
useZro
adapterParams
returns
nativeFee
zroFee
estimateSendFee
dstChainId
toAddress
amount
useZro
adapterParams
estimateSendAndCallFee
uint16
dstChainId
bytes32
toAddress
amount
payload
uint64
dstGasForCall
useZro
adapterParams
returns
nativeFee
zroFee
estimateSendAndCallFee
dstChainId
toAddress
amount
payload
dstGasForCall
useZro
adapterParams
circulatingSupply
returns
token
returns
OFTV2
is
BaseOFTV2
ERC20
ld2sdRate
name
symbol
uint8
sharedDecimals
lzEndpoint
ERC20
name
symbol
BaseOFTV2
sharedDecimals
lzEndpoint
uint8
decimals
decimals
sharedDecimals
decimals
OFT
sharedDecimals
must
be
decimals
ld2sdRate
decimals
sharedDecimals
circulatingSupply
returns
totalSupply
token
returns
debitFrom
from
uint16
bytes32
rawAmount
returns
spender
msgSender
uint96
amount
safe96
rawAmount
INA
approve
amount
exceeds
bits
from
spender
spendAllowance
from
spender
amount
burn
from
amount
amount
creditTo
uint16
toAddress
rawAmount
returns
uint96
amount
safe96
rawAmount
INA
approve
amount
exceeds
bits
mint
toAddress
amount
amount
transferFrom
from
to
rawAmount
returns
spender
msgSender
uint96
amount
safe96
rawAmount
INA
approve
amount
exceeds
bits
from
from
spender
spendAllowance
from
spender
amount
transfer
from
to
amount
amount
ld2sdRate
returns
ld2sdRate
InvtAI
is
OFTV2
endpoint
initialSupply
OFTV2
InvtAI
INA
endpoint
endpoint
invalid
LZ
Endpoint
initialSupply
mint
msgSender
initialSupply
